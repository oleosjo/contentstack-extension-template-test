---

name: 'Release and Deploy'

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The GH tag to deploy'
        type: string
        requred: true
      environment:
        description: 'The environment to deploy to'
        type: choice
        options:
          - staging
          - production
        default: staging
      skip-publish:
        description: 'Indicates that the tag already has published assets and the publish step can be skipped'
        type: boolean
        default: false
  push:
    tags:
      - 'v*'

permissions:
  id-token: write # aws auth
  contents: write # write to gh release

defaults:
  run:
    shell: bash

jobs:
  info:
    name: 'Get info'
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.info.outputs.name }}
      tag: ${{ steps.info.outputs.tag }}
      environment: ${{ steps.info.outputs.environment }}
      bucket: ${{ steps.info.outputs.bucket }}
      bucket-path: ${{ steps.info.outputs.bucket-path }}
      public-url: ${{ steps.info.outputs.public-url }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Get info'
        id: info
        uses: ./.github/actions/info
        with:
          environment: ${{ github.event.inputs.environment }}
          tag: ${{ github.event.inputs.tag }}

  publish:
    name: 'Publish release assets'
    runs-on: ubuntu-latest
    needs: info
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Build, test, and release'
        if: github.event.inputs.skip-publish != 'true'
        uses: shopsmart/github-actions/patterns/node@v2
        with:
          build: true
          test: true
          release: true
          # publish: false
          name: ${{ needs.info.outputs.name }}
          tag: ${{ needs.info.outputs.tag }}
          build-env-vars: PUBLIC_URL=${{ needs.info.outputs.public-url }}

  deploy:
    name: 'Deploy assets to bucket'
    runs-on: ubuntu-latest
    needs:
      - info
      - publish
    steps:
      - name: 'Deploy static assets'
        uses: shopsmart/github-actions/actions/deploy-to-s3-bucket@v2
        with:
          pattern: ${{ needs.info.outputs.name }}-*.tgz
          tag: ${{ needs.info.outputs.tag }}
          # AWS Credentials
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/contentstack-extensions
          # S3 Configurations
          s3-bucket: ${{ needs.info.outputs.bucket }}
          s3-bucket-path: ${{ needs.info.outputs.bucket-path }}
          s3-tags: version=${{ needs.info.outputs.tag }}
